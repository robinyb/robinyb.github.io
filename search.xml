<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[使用Hexo搭建博客]]></title>
    <url>%2F2018%2F01%2F21%2F%E4%BD%BF%E7%94%A8Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[一直想要开个博客，却在想要折腾和懒惰之间纠结了好久。也是最近的工作稍有心烦意乱，觉得是该静静心沉淀一下了，于是便有了此处的存在。 Why Hexo决定了写字，首先就要找个写字的地方。之所以选择用Hexo搭建个人博客，主要是以下几个原因吧 支持markdown：简洁，可以在写文章的时候有更好的控制力，同时能更专注文章本身而非样式；而且深以为内容和样式分离是极好的 方便部署上线：可以很方便的部署到GitHub，利用GitHub Pages托管网站，足够好用 较低的折腾门槛：可以满足我少许折腾的愿望，但又不会太过麻烦，使得沉淀与折腾本末倒置 好看：”始于颜值，陷于才华…”，原谅我颜控了；真心喜欢Hexo的主题，所以也没有选择Jekyll 搭建博客以下步骤基于windows环境，整个搭建过程预计一小时；如果本身是技术出身，对git等相关内容有了解的话，可能半小时就搞的定。用半小时换一个自己的独立博客，你值得折腾！ 准备工作如果还没有git账号，请出门左转，先申请GitHub账号，并熟悉基本的git命令 安装GitBash安装地址点击下载，一路确定即可；配置ssh，确保联通自己的账号，参考文章 安装Node.js安装地址Hexo是基于Node.js的，所以你的系统中要有它。直接在官网选择对应版本安装即可 安装Hexo创建一个目录（比如hexo），作为hexo工程根目录；右键hexo目录，选择GitBash，开始安装Hexo相关的东东 安装Hexo 12npm install -g hexo-clinpm install hexo --save 初始化博客 1hexo init 安装插件以下是一些好用的插件，包括自动部署、sitemap、rss等网站相关功能；建议刚开始折腾的时候都安装，省心省力 1234567891011121314npm install hexo-generator-index --savenpm install hexo-generator-archive --savenpm install hexo-generator-category --savenpm install hexo-generator-tag --savenpm install hexo-server --savenpm install hexo-deployer-git --savenpm install hexo-deployer-heroku --savenpm install hexo-deployer-rsync --savenpm install hexo-deployer-openshift --savenpm install hexo-renderer-marked@0.2 --savenpm install hexo-renderer-stylus@0.2 --savenpm install hexo-generator-feed@1 --savenpm install hexo-generator-sitemap@1 --savenpm install hexo-wordcount@2 --save 本地验证启动本地服务后，在浏览器打开服务网址，就可以看到hexo的”hello world”问候了 1hexo server 部署到GitHub 创建仓库创建地址GitHub上新建托管博客的仓库，注意仓库名与GitHub用户名要一致 配置部署参数打开hexo/_config.yml，配置deploy部分参数，填入自己的仓库地址 1234deploy: type: git repository: git@github.com:用户名/用户名.github.io.git branch: master 部署 1hexo deploy 网上验证打开托管网址，就可以看到和本地验证一样的网页了：https://用户名.github.io/ 至此，你已经走通了全部流程，后续只需要写文章-部署-写文章-部署…就可以了，是不是很简单？！ 开始写字hello world 新建文章 1hexo new hello-world 编辑文章在hexo/source/_posts/目录下可以看到新建的文章文件，用你喜欢的文本编辑器打开文件，开始你的写作 生成静态文件 1hexo generage 发布文章 1hexo deploy 每次写作都是上述这样的简单过程，当然，hexo支持一些其他的实用命令和配置 草稿的使用很多情况下，我们并不是”写博客-发布-写下一篇”这样的串行写作模式，而可能同时会有很多个待发布的文章并行存在，此时新建文章的时候可以用参数draft声明为草稿，这样就不会不小心将写了一半的文章发布出去了1hexo new draft hello-world 草稿文章的路径是hexo/source/_drafts/；写完草稿后，通过下列命令执行发布1hexo publish hello-world 之后在生成静态文件并部署就可以了值得注意的是，草稿在本地验证的时候默认不会渲染，查看草稿的样式可以用：1hexo server --draft 相关配置主题配置 下载主题下载主题到hexo目录下，以next主题为例 1git clone https://github.com/iissnan/hexo-theme-next themes/next 应用主题hexo/_config.yml中，配置theme参数，使主题生效 1theme: next 主题的配置hexo/themes/next/_config.yml是主题的配置文件，在里面可以折腾主题的各种样式方面的配置 hexo/_config.yml是博客站点的配置文件，注意两者的差别 注意：主题配置修改后，通常需要重新生成下静态资源才能生效12hexo cleanhexo generate 模板配置 添加分类和标签hexo目录下添加分类和标签页面 12hexo new page categorieshexo new page tags 配置分类和标签到菜单hexo/themes/next/_config.yml中，配置menu参数，使分类和标签在菜单栏上生效 12345menu: home: / || home categories: /categories/ || th tags: /tags/ || tags archives: /archives/ || archive 配置文章模板在常用的博客文章模板中添加标签和分类，方便新博客的书写。默认模板是hexo\scaffolds\post.md，编辑如下即可 12345title: &#123; &#123; title &#125; &#125;date: &#123; &#123; date &#125; &#125;categories:tags:--- 其余的折腾，可以参考hexo的官方文档 希望这篇文章可以对你有帮助于我，剩下的就是持续的写字和折腾了，期望自己可以坚持下去毕竟17年todo list的一项，终于在一年后的今天艰难的开启了( ╯□╰ )]]></content>
      <categories>
        <category>生命在于折腾</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>GitHUb</tag>
      </tags>
  </entry>
</search>
